namespace: monitoring
helmCharts:
  - name: grafana
    version: 6.56.0
    repo: https://grafana.github.io/helm-charts
    releaseName: grafana
    namespace: monitoring
    valuesInline:
      grafana.ini:
        server:
          domain: grafana.loutre.tel
      ingress:
        enabled: true
        hosts: ["grafana.loutre.tel"]
        ingressClassName: nginx
      persistence:
        enabled: true
      admin:
        existingSecret: grafana
        userKey: admin-user
        passwordKey: admin-password
      dashboardProviders:
        dashboardproviders.yaml:
          apiVersion: 1
          providers:
          - name: 'grafana-dashboards-kubernetes'
            orgId: 1
            folder: 'Kubernetes'
            type: file
            disableDeletion: true
            editable: true
            options:
              path: /var/lib/grafana/dashboards/grafana-dashboards-kubernetes
      dashboards:
        grafana-dashboards-kubernetes:
          k8s-system-api-server:
            url: https://raw.githubusercontent.com/dotdc/grafana-dashboards-kubernetes/master/dashboards/k8s-system-api-server.json
            token: ''
          k8s-system-coredns:
            url: https://raw.githubusercontent.com/dotdc/grafana-dashboards-kubernetes/master/dashboards/k8s-system-coredns.json
            token: ''
          k8s-views-global:
            url: https://raw.githubusercontent.com/dotdc/grafana-dashboards-kubernetes/master/dashboards/k8s-views-global.json
            token: ''
          k8s-views-namespaces:
            url: https://raw.githubusercontent.com/dotdc/grafana-dashboards-kubernetes/master/dashboards/k8s-views-namespaces.json
            token: ''
          k8s-views-nodes:
            url: https://raw.githubusercontent.com/dotdc/grafana-dashboards-kubernetes/master/dashboards/k8s-views-nodes.json
            token: ''
          k8s-views-pods:
            url: https://raw.githubusercontent.com/dotdc/grafana-dashboards-kubernetes/master/dashboards/k8s-views-pods.json
            token: ''
      datasources:
        datasources.yaml:
          apiVersion: 1
          datasources:
            - name: Mimir
              type: prometheus
              url: http://mimir-nginx/prometheus
            - name: Loki
              type: loki
              url: http://loki-gateway
  - name: loki
    version: 5.3.1
    repo: https://grafana.github.io/helm-charts
    releaseName: loki
    namespace: monitoring
    valuesInline:
      loki:
        commonConfig:
          replication_factor: 1
        storage:
          type: 'filesystem'
        auth_enabled: false
      singleBinary:
        replicas: 1
        persistence:
          enableStatefulSetAutoDeletePVC: false
      gateway:
        affinity: ""
      monitoring:
        selfMonitoring:
          enabled: false
          grafanaAgent:
            installOperator: false
      test:
        enabled: false
  #- name: grafana-agent-operator
    #version: 0.2.15
    #repo: https://grafana.github.io/helm-charts
    #releaseName: grafana-agent-operator
    #namespace: monitoring
    #includeCRDs: true
    #valuesInline:
      #kubeletService:
        #namespace: monitoring
        #serviceName: kubelet
  - name: grafana-agent
    version: 0.12.0
    repo: https://grafana.github.io/helm-charts
    releaseName: grafana-agent
    namespace: monitoring
    includeCRDs: true
    valuesInline:
      agent:
        configMap:
          create: false
          name: grafana-agent
          key: config.river
        mounts:
          varlog: true
          dockercontainers: true
          extra:
            - mountPath: /host/root
              name: rootfs
            - mountPath: /host/sys
              name: sysfs
            - mountPath: /host/proc
              name: procfs
      controller:
        volumes:
          extra:
            - hostPath:
                path: /
              name: rootfs
            - hostPath:
                path: /sys
              name: sysfs
            - hostPath:
                path: /proc
              name: procfs
      ingress:
        enabled: true
        hosts: [ "faro.loutre.tel" ]
        ingressClassName: nginx
        annotations:
          nginx.ingress.kubernetes.io/auth-url: "https://sso.loutre.tel/oauth2/auth"
          nginx.ingress.kubernetes.io/auth-signin: "https://sso.loutre.tel/oauth2/start?rd=/redirect/$http_host$request_uri"

  - name: kube-state-metrics
    version: 5.6.0
    repo: https://prometheus-community.github.io/helm-charts
    releaseName: kube-state-metrics
    namespace: monitoring
    valuesInline:
      prometheusScrape: false
      prometheus:
        monitor:
          enabled: true
      selfMonitor:
        enabled: true
  - name: mimir-distributed
    version: 4.3.1
    repo: https://grafana.github.io/helm-charts
    releaseName: mimir
    namespace: monitoring
    valuesInline:
      mimir:
        structuredConfig:
          multitenancy_enabled: false
          limits:
            compactor_blocks_retention_period: 30d
            max_label_names_per_series: 60
      ingester:
        zoneAwareReplication:
          enabled: false
        persistentVolume:
          size: 100Gi
      store_gateway:
        zoneAwareReplication:
          enabled: false
      minio:
        persistence:
          size: 100Gi
      metaMonitoring:
        serviceMonitor:
          enabled: true


resources:
  - sealed-secret-grafana.yaml
  #- grafana-agent.yaml
  #- grafana-agent-logs.yaml
  #- grafana-agent-metrics.yaml
  #- grafana-agent-integrations.yaml
  #- service-monitor-apiserver.yaml
  #- service-monitor-coredns.yaml

configMapGenerator:
  - name: grafana-agent
    files:
      - config.river
    options:
      disableNameSuffixHash: true
